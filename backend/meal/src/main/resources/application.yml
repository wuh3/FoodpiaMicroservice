# Meal Service Configuration
server:
  port: ${SERVER_PORT:8082}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:meal-service}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}

  # MongoDB Configuration for Foodopia_meal database
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/foodopia_meal}

# Eureka Client Configuration - ENABLED for service discovery
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8070/eureka/}
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA:true}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY:true}
  instance:
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics"
  endpoint:
    health:
      show-details: always
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true

# Logging Configuration
logging:
  level:
    com:
      foodopia:
        meal: DEBUG
    org:
      springframework:
        data:
          mongodb: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Info
info:
  app:
    name: ${spring.application.name}
    description: "Foodopia Meal Service"
    version: "1.0.0"