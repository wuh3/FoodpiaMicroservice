{"ast":null,"code":"var _jsxFileName = \"/Users/haozhewu/Desktop/Extra Curriculum/FoodpiaMicroservice/frontend/src/components/auth/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [apiError, setApiError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n\n  // Field validation timers\n  const [usernameTimer, setUsernameTimer] = useState(null);\n  useEffect(() => {\n    // If user is already logged in, redirect to home\n    if (isAuthenticated) {\n      navigate('/');\n    }\n  }, [isAuthenticated, navigate]);\n  const validateField = (name, value) => {\n    let error = '';\n    switch (name) {\n      case 'username':\n        if (value.length < 6) {\n          error = 'Username must be at least 6 characters long';\n        } else if (!/^[a-zA-Z0-9]+$/.test(value)) {\n          error = 'Username must contain only letters and numbers';\n        } else if (!/[a-zA-Z]/.test(value) || !/[0-9]/.test(value)) {\n          error = 'Username must contain both letters and numbers';\n        }\n        break;\n      case 'email':\n        if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n          error = 'Please enter a valid email address';\n        }\n        break;\n      case 'password':\n        if (value.length < 8) {\n          error = 'Password must be at least 8 characters long';\n        } else if (!/[a-z]/.test(value)) {\n          error = 'Password must contain at least one lowercase letter';\n        } else if (!/[A-Z]/.test(value)) {\n          error = 'Password must contain at least one uppercase letter';\n        } else if (!/[0-9]/.test(value)) {\n          error = 'Password must contain at least one digit';\n        }\n        break;\n      case 'confirmPassword':\n        if (value !== formData.password) {\n          error = 'Passwords do not match';\n        }\n        break;\n      default:\n        break;\n    }\n    return error;\n  };\n  const checkUsernameAvailability = async username => {\n    if (username.length >= 6) {\n      try {\n        const isAvailable = await AuthService.checkUsernameAvailability(username);\n        if (!isAvailable) {\n          setErrors(prev => ({\n            ...prev,\n            username: 'This username is already taken'\n          }));\n        }\n      } catch (error) {\n        console.error('Error checking username availability:', error);\n      }\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // Validate field as user types\n    const error = validateField(name, value);\n    setErrors({\n      ...errors,\n      [name]: error\n    });\n\n    // For username, debounce the availability check\n    if (name === 'username' && !error) {\n      if (usernameTimer) clearTimeout(usernameTimer);\n      const timer = setTimeout(() => {\n        checkUsernameAvailability(value);\n      }, 500);\n      setUsernameTimer(timer);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setApiError('');\n\n    // Validate all fields\n    const newErrors = {};\n    Object.keys(formData).forEach(key => {\n      const error = validateField(key, formData[key]);\n      if (error) newErrors[key] = error;\n    });\n\n    // If there are validation errors, don't submit\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        username,\n        email,\n        password,\n        confirmPassword\n      } = formData;\n      const response = await AuthService.register(username, email, password, confirmPassword);\n      if (response.success) {\n        // Redirect to login page with username prefilled\n        navigate(`/login?username=${username}&registered=true`);\n      } else {\n        setApiError(response.message);\n      }\n    } catch (error) {\n      setApiError('An unexpected error occurred. Please try again.');\n      console.error('Registration error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"auth-title\",\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), apiError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: apiError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Choose a username\",\n          value: formData.username,\n          onChange: handleChange,\n          isInvalid: !!errors.username,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Username must be at least 6 characters and contain both letters and numbers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter your email\",\n          value: formData.email,\n          onChange: handleChange,\n          isInvalid: !!errors.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Create a password\",\n              value: formData.password,\n              onChange: handleChange,\n              isInvalid: !!errors.password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"Password must be at least 8 characters with lowercase, uppercase letters and digits.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formConfirmPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"confirmPassword\",\n              placeholder: \"Confirm your password\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              isInvalid: !!errors.confirmPassword,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.confirmPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"w-100\",\n        disabled: loading,\n        children: loading ? 'Registering...' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"crqIOemYoNpLPyuG7OuhPVxArek=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Alert","Row","Col","Link","useNavigate","AuthService","useAuth","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","confirmPassword","errors","setErrors","apiError","setApiError","loading","setLoading","isAuthenticated","navigate","usernameTimer","setUsernameTimer","validateField","name","value","error","length","test","checkUsernameAvailability","isAvailable","prev","console","handleChange","e","target","clearTimeout","timer","setTimeout","handleSubmit","preventDefault","newErrors","Object","keys","forEach","key","response","register","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","required","Feedback","Text","md","disabled","to","_c","$RefreshReg$"],"sources":["/Users/haozhewu/Desktop/Extra Curriculum/FoodpiaMicroservice/frontend/src/components/auth/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert, Row, Col } from 'react-bootstrap';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\nimport { useAuth } from '../../context/AuthContext';\n\nconst Register = () => {\n    const [formData, setFormData] = useState({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [errors, setErrors] = useState({});\n    const [apiError, setApiError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const { isAuthenticated } = useAuth();\n    const navigate = useNavigate();\n\n    // Field validation timers\n    const [usernameTimer, setUsernameTimer] = useState(null);\n\n    useEffect(() => {\n        // If user is already logged in, redirect to home\n        if (isAuthenticated) {\n            navigate('/');\n        }\n    }, [isAuthenticated, navigate]);\n\n    const validateField = (name, value) => {\n        let error = '';\n\n        switch (name) {\n            case 'username':\n                if (value.length < 6) {\n                    error = 'Username must be at least 6 characters long';\n                } else if (!/^[a-zA-Z0-9]+$/.test(value)) {\n                    error = 'Username must contain only letters and numbers';\n                } else if (!/[a-zA-Z]/.test(value) || !/[0-9]/.test(value)) {\n                    error = 'Username must contain both letters and numbers';\n                }\n                break;\n\n            case 'email':\n                if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n                    error = 'Please enter a valid email address';\n                }\n                break;\n\n            case 'password':\n                if (value.length < 8) {\n                    error = 'Password must be at least 8 characters long';\n                } else if (!/[a-z]/.test(value)) {\n                    error = 'Password must contain at least one lowercase letter';\n                } else if (!/[A-Z]/.test(value)) {\n                    error = 'Password must contain at least one uppercase letter';\n                } else if (!/[0-9]/.test(value)) {\n                    error = 'Password must contain at least one digit';\n                }\n                break;\n\n            case 'confirmPassword':\n                if (value !== formData.password) {\n                    error = 'Passwords do not match';\n                }\n                break;\n\n            default:\n                break;\n        }\n\n        return error;\n    };\n\n    const checkUsernameAvailability = async (username) => {\n        if (username.length >= 6) {\n            try {\n                const isAvailable = await AuthService.checkUsernameAvailability(username);\n                if (!isAvailable) {\n                    setErrors(prev => ({\n                        ...prev,\n                        username: 'This username is already taken'\n                    }));\n                }\n            } catch (error) {\n                console.error('Error checking username availability:', error);\n            }\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n\n        // Validate field as user types\n        const error = validateField(name, value);\n\n        setErrors({\n            ...errors,\n            [name]: error\n        });\n\n        // For username, debounce the availability check\n        if (name === 'username' && !error) {\n            if (usernameTimer) clearTimeout(usernameTimer);\n            const timer = setTimeout(() => {\n                checkUsernameAvailability(value);\n            }, 500);\n            setUsernameTimer(timer);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Clear previous messages\n        setApiError('');\n\n        // Validate all fields\n        const newErrors = {};\n        Object.keys(formData).forEach(key => {\n            const error = validateField(key, formData[key]);\n            if (error) newErrors[key] = error;\n        });\n\n        // If there are validation errors, don't submit\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            return;\n        }\n\n        setLoading(true);\n\n        try {\n            const { username, email, password, confirmPassword } = formData;\n            const response = await AuthService.register(username, email, password, confirmPassword);\n\n            if (response.success) {\n                // Redirect to login page with username prefilled\n                navigate(`/login?username=${username}&registered=true`);\n            } else {\n                setApiError(response.message);\n            }\n        } catch (error) {\n            setApiError('An unexpected error occurred. Please try again.');\n            console.error('Registration error:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"auth-form\">\n            <h2 className=\"auth-title\">Create an Account</h2>\n\n            {apiError && <Alert variant=\"danger\">{apiError}</Alert>}\n\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Choose a username\"\n                        value={formData.username}\n                        onChange={handleChange}\n                        isInvalid={!!errors.username}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.username}\n                    </Form.Control.Feedback>\n                    <Form.Text className=\"text-muted\">\n                        Username must be at least 6 characters and contain both letters and numbers.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter your email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        isInvalid={!!errors.email}\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        {errors.email}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Row>\n                    <Col md={6}>\n                        <Form.Group className=\"mb-3\" controlId=\"formPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Create a password\"\n                                value={formData.password}\n                                onChange={handleChange}\n                                isInvalid={!!errors.password}\n                                required\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.password}\n                            </Form.Control.Feedback>\n                            <Form.Text className=\"text-muted\">\n                                Password must be at least 8 characters with lowercase, uppercase letters and digits.\n                            </Form.Text>\n                        </Form.Group>\n                    </Col>\n\n                    <Col md={6}>\n                        <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                value={formData.confirmPassword}\n                                onChange={handleChange}\n                                isInvalid={!!errors.confirmPassword}\n                                required\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.confirmPassword}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Col>\n                </Row>\n\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100\" disabled={loading}>\n                    {loading ? 'Registering...' : 'Register'}\n                </Button>\n            </Form>\n\n            <div className=\"text-center mt-3\">\n                <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}